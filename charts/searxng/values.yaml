searxng:
  applicationName: "searxng"

  deployment:
    enabled: true
    #  Security Context at Container Level
    containerSecurityContext:
      capabilities:
        drop: ["ALL"]
        add: ["SETGID", "SETUID"]
      # Setting the following to 'true' breaks SearXNG
      readOnlyRootFilesystem: false
      runAsNonRoot: false
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
    image:
      repository: vojkovic/searxng
      tag: production
      pullPolicy: Always
    startupProbe:
      enabled: true
      failureThreshold: 5
      periodSeconds: 10
      timeoutSeconds: 60
      initialDelaySeconds: 5
      httpGet:
        path: /healthz
        port: 8080

    env:
      SEARXNG_SECRET: 
        value: "changedsecret"
      LIMITER: 
        value: "true"
      REDIS_URL:
        value: "redis://searxng-redis.searxng.svc.cluster.local:6379/0"
      PRIVACYPOLICY:
        value: "https://priv.au/privacy/"
      IMAGE_PROXY:
        value: "true"
      CONTACT:
        value: "https://vojk.au/"
      SEARCH_DEFAULT_LANG:
        value: "en"
      SEARCH_ENGINE_ACCESS_DENIED:
        value: "60"
      PUBLIC_INSTANCE:
        value: "false"

    readinessProbe:
      enabled: true
      failureThreshold: 3
      periodSeconds: 60
      timeoutSeconds: 60
      httpGet:
        path: /healthz
        port: 8080

    livenessProbe:
      enabled: true
      failureThreshold: 3
      periodSeconds: 60
      timeoutSeconds: 60
      httpGet:
        path: /healthz
        port: 8080

    ports:
    - containerPort: 8080
      name: http
      protocol: TCP

    ingress:
      enabled: false

redis:
  enabled: true
  persistentVolumeClaim:
    create: false